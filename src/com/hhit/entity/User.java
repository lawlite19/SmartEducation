package com.hhit.entity;

import java.util.Collection;

import com.opensymphony.xwork2.ActionContext;
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : User.java
//  @ Date : 2016/3/25
//  @ Author : 
//

public class User implements java.io.Serializable{
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer id;
	private String userNum;
	private String password;
	private String userType;
	
	
	private Student student;
	private Teacher teacher;
	/**
	 * 默认构造函数,重载了则不可缺少
	 */
	public User(){
		
	}
	
	/**
	 * 构造函数，用户安装
	 */
	public User(String un,String pwd,String ut,Student stu,Teacher tea){
		userNum=un;
		password=pwd;
		userType=ut;
		student=stu;
		teacher=tea;
	}
	/**
	 * 判断本用户是否有指定名称的权限
	 * 
	 * @param name
	 * @return
	 */
	public boolean hasPrivilegeByName(String name) {
		// 超级管理有所有的权限
		if (isAdmin()) {
			return true;
		}
		if(student!=null){
			// 学生要判断是否含有这个权限
			if(student.getRole()!=null){
				for (Privilege priv : student.getRole().getPrivileges()) {
					if (priv.getPrivilegeName().equals(name)) {
						return true;
					}
				}
			}
		}
		if(teacher!=null){
			// 教师要判断是否含有这个权限
			if(teacher.getRoles()!=null){
				for (Role role : teacher.getRoles()) {
					for (Privilege priv : role.getPrivileges()) {
						if (priv.getPrivilegeName().equals(name)) {
							return true;
						}
					}
				}
			}
		}
		return false;
	}
	/**
	 * 判断本用户是否有指定URL的权限
	 * 
	 * @param privUrl
	 * @return
	 */
	public boolean hasPrivilegeByUrl(String privUrl) {
		// 超级管理有所有的权限
		if (isAdmin()) {
			return true;
		}

		// >> 去掉后面的参数
		int pos = privUrl.indexOf("?");
		if (pos > -1) {
			privUrl = privUrl.substring(0, pos);
		}
		// >> 去掉UI后缀
		if (privUrl.endsWith("UI")) {
			privUrl = privUrl.substring(0, privUrl.length() - 2);
		}

		// 如果本URL不需要控制，则登录用户就可以使用

		@SuppressWarnings("unchecked")
		Collection<String> allPrivilegeUrls = (Collection<String>) ActionContext.getContext().getApplication().get("allPrivilegeUrls");
		if (!allPrivilegeUrls.contains(privUrl)) {
			return true;
		} else {
			if(student!=null){
				// 学生要判断是否含有这个权限
				for (Privilege priv : student.getRole().getPrivileges()) {
					if (privUrl.equals(priv.getUrl())) {
						return true;
					}
				}
			}
			if(teacher!=null){
				// 老师要判断是否含有这个权限
				for (Role role : teacher.getRoles()) {
					for (Privilege priv : role.getPrivileges()) {
						if (privUrl.equals(priv.getUrl())) {
							return true;
						}
					}
				}
			}
			
			return false;
		}
	}
	/**
	 * 判断本用户是否是超级管理员
	 * 
	 * @return
	 */
	public boolean isAdmin() {
		return "admin".equals(userNum);
	}
	
	
	public Integer getId() {
		return id;
	}
	public void setId(Integer id) {
		this.id = id;
	}
	public String getUserNum() {
		return userNum;
	}
	public void setUserNum(String userNum) {
		this.userNum = userNum;
	}
	public String getPassword() {
		return password;
	}
	public void setPassword(String password) {
		this.password = password;
	}
	public String getUserType() {
		return userType;
	}
	public void setUserType(String userType) {
		this.userType = userType;
	}

	public Student getStudent() {
		return student;
	}

	public void setStudent(Student student) {
		this.student = student;
	}

	public Teacher getTeacher() {
		return teacher;
	}

	public void setTeacher(Teacher teacher) {
		this.teacher = teacher;
	}


}
